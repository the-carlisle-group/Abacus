 TestCellNavigation←{
     ⎕TID=0:∇&0
     t←ReInit 0
     cc←'active-cell'
     m n←t.DataSize
     Assert m n≡20081 24:
     Press'Ctrl' 'Home':
     Assert t.ActiveCell≡0 0:
     Assert(⊃BrowserCells)HasClass cc:
     Press'Ctrl' 'End':
     Assert t.ActiveCell≡m n-1:
     Assert(⊃⌽⊖BrowserCells)HasClass cc:
     Press'Home':
     Assert t.ActiveCell≡(m-1),0:
     Assert(⊃⊖BrowserCells)HasClass cc:
     Press'Ctrl' 'ArrowUp':
     Assert t.ActiveCell≡0 0:
     Press'ArrowDown':
     Assert t.ActiveCell≡1 0:
     Press'ArrowRight':
     Assert t.ActiveCell≡1 1:
     Press'Ctrl' 'ArrowDown':
     Assert t.ActiveCell≡(m-1)1:
     Press'ArrowUp':
     Assert t.ActiveCell≡(m-2)1:
     Press'Ctrl' 'ArrowRight':
     Assert t.ActiveCell≡(m-2)(n-1):
     Press'Ctrl' 'ArrowLeft':
     Assert t.ActiveCell≡(m-2)0:
     Press'Ctrl' 'Home':
     Press'End':
     Assert t.ActiveCell≡0,n-1:
     Assert(⊃⌽BrowserCells)HasClass cc:
     Press'Home':
     Press'PageDown':
     Assert t.ActiveCell≡(⊃t.WindowSize),0:
     Press'PageUp':
     Assert t.ActiveCell≡0 0:
     Press'Alt' 'PageDown':
     Assert t.ActiveCell≡0,1⊃t.WindowSize:
     Press'Alt' 'PageUp':
     Assert t.ActiveCell≡0 0:
     0
 }
